{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","moment","Date","format","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGMA,EACC,mCADDA,EAEE,2CA+COC,MA5Cf,WACE,MAA0BC,mBAAS,qBAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAcA,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,WAAsB,MAAzG,SACI,iCACI,qBAAKF,UAAU,aAAf,SACI,uBAAOG,KAAK,OAAOH,UAAU,aAAaI,YAAY,YAClDC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QAAQA,MAAOZ,EAAOa,WAjB1D,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAae,oBAAhBlB,EAAQG,KACjB,gCACI,sBAAKD,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,KAA2CrB,EAAQsB,IAAIC,WACvD,qBAAKrB,UAAU,OAAf,SAAuBsB,IAAO,IAAIC,MAAQC,OAAO,yBAErD,sBAAKxB,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,UACKyB,KAAKC,MAAM5B,EAAQG,KAAKC,MAD7B,WAGA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAGhD,SClCF0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4dad5567.chunk.js","sourcesContent":["import { useState } from 'react';\nimport  moment  from 'moment'\nimport './App.css';\nconst api ={\n  key: \"733e032764c575107abb413f431e1566\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('Republic of India');\n  \n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n        <main>\n            <div className=\"search-box\">\n                <input type=\"text\" className=\"search-bar\" placeholder=\"Search...\"\n                    onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}\n                />\n            </div>\n            {(typeof weather.main != \"undefined\") ? (\n            <div>\n                <div className=\"location-box\">\n                    <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n                    <div className=\"date\">{moment(new Date()).format(\"dddd D MMMM YYYY\")       }</div>\n                </div>\n                <div className=\"weather-box\">\n                    <div className=\"temp\">\n                        {Math.round(weather.main.temp)}Â°c\n                    </div>\n                    <div className=\"weather\">{weather.weather[0].main}</div>\n                </div>\n            </div>\n            ) : ('')}\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}